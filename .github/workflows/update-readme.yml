name: Update README stats

on:
  # Îß§Ïùº KST Ïò§Ï†Ñ 6ÏãúÏóê ÏûêÎèô Ïã§Ìñâ (UTC 21:00 Ï†ÑÎÇ†)
  # schedule:
  #   - cron: "0 21 * * *"
  workflow_dispatch:    # ÏàòÎèô Ïã§Ìñâ Î≤ÑÌäº
  push:
    branches: [ main ]  # main Î∏åÎûúÏπòÏóêÏÑúÎßå Ïã§Ìñâ

permissions:
  contents: write       # README Í∞±Ïã† Ïª§Î∞ã Í∂åÌïú

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # Ï†ÑÏ≤¥ ÌûàÏä§ÌÜ†Î¶¨ Í∞ÄÏ†∏ÏôÄ rebase Ï∂©Îèå Î∞©ÏßÄ

      - name: Generate total problem stats
        shell: bash
        run: |
          set -euo pipefail
          
          # ----------------------------------------------------
          # Í≤ΩÎ°ú: root/work/Java/Î∞±Ï§Ä, root/work/Kotlin/Î∞±Ï§Ä Îì±
          # ----------------------------------------------------
          count_dir () {
            local dir="$1" ext="$2"
            if [ -d "$dir" ]; then
              find "$dir" -type f -name "$ext" 2>/dev/null | wc -l
            else
              echo 0
            fi
          }

          # -------------------
          # Ïò®ÎùºÏù∏ Ï†ÄÏßÄÎ≥Ñ ÏßëÍ≥Ñ
          # -------------------

          # Î∞±Ï§Ä
          baekjoon_java=$(count_dir "work/Java/Î∞±Ï§Ä" "*.java")
          baekjoon_kotlin=$(count_dir "work/Kotlin/Î∞±Ï§Ä" "*.kt")
          baekjoon_total=$((baekjoon_java + baekjoon_kotlin))

          # ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§
          programmers_java=$(count_dir "work/Java/ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§" "*.java")
          programmers_kotlin=$(count_dir "work/Kotlin/ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§" "*.kt")
          programmers_total=$((programmers_java + programmers_kotlin))

          # Ï¥ùÌï©
          total=$((baekjoon_total + programmers_total))

          # -------------------
          # README ÏΩòÌÖêÏ∏† ÏûëÏÑ±
          # -------------------
          export TZ=Asia/Seoul
          now="$(date '+%Y-%m-%d %H:%M %Z')"

          CONTENT_FILE="$(mktemp)"
          printf "%s\n" \
          "## üöÄ Î¨∏Ï†ú ÏßëÍ≥Ñ (${now})" \
          "- Baekjoon: ${baekjoon_total} Î¨∏Ï†ú (Java ${baekjoon_java}, Kotlin ${baekjoon_kotlin})" \
          "- Programmers: ${programmers_total} Î¨∏Ï†ú (Java ${programmers_java}, Kotlin ${programmers_kotlin})" \
          "- Total: ${total} Î¨∏Ï†ú" \
          > "$CONTENT_FILE"

          START="<!-- TOTAL_PROBLEM_STATS_START -->"
          END="<!-- TOTAL_PROBLEM_STATS_END -->"

          if grep -q "$START" README.md && grep -q "$END" README.md; then
            # ÎßàÏª§ ÏÇ¨Ïù¥ ÎÇ¥Ïö©ÏùÑ ÏûÑÏãúÌååÏùºÎ°ú ÍµêÏ≤¥ (GNU sed)
            sed -i -e "/$START/,/$END/{
              /$START/{p;r $CONTENT_FILE}
              /$END/p
              d
            }" README.md
          else
            {
              echo ""
              echo "$START"
              cat "$CONTENT_FILE"
              echo "$END"
            } >> README.md
          fi

          rm -f "$CONTENT_FILE"

      - name: Commit & push if changed
        shell: bash
        run: |
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add README.md
            git commit -m "chore(readme): auto-update problem stats"
          
            # ÏõêÍ≤© rebase ÌõÑ push (Ï∂©Îèå Î∞©ÏßÄ)
            git pull --rebase origin main || true
            git push
          else
            echo "‚úÖ No changes detected. Nothing to commit."
          fi
